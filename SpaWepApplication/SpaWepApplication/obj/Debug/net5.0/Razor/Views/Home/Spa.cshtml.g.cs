#pragma checksum "C:\Users\Vedat\source\repos\SpaWepApplication\SpaWepApplication\Views\Home\Spa.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "67bb7cc9b6e58950e34d0abc2b751d137f0e6cfe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Spa), @"mvc.1.0.view", @"/Views/Home/Spa.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Vedat\source\repos\SpaWepApplication\SpaWepApplication\Views\_ViewImports.cshtml"
using SpaWepApplication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Vedat\source\repos\SpaWepApplication\SpaWepApplication\Views\_ViewImports.cshtml"
using SpaWepApplication.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"67bb7cc9b6e58950e34d0abc2b751d137f0e6cfe", @"/Views/Home/Spa.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"173b091c6d1188968e891d14cda4fd1177588190", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Spa : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Vedat\source\repos\SpaWepApplication\SpaWepApplication\Views\Home\Spa.cshtml"
  
    ViewData["Title"] = "Spa";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""container"">
    <div class=""row"">
        <div class=""col-md-6"">
            <h2>Üye Formu</h2>
            <div class=""form-group row"">
                <label class=""col-md-3 col-form-label"">Adınız</label>
                <div class=""col-md-9"">
                    <input type=""text"" class=""form-control"" id=""Name"" />
                </div>
            </div>
            <div class=""form-group row"">
                <label class=""col-md-3 col-form-label"">Soyadınız</label>
                <div class=""col-md-9"">
                    <input type=""text"" class=""form-control"" id=""Surname"" />
                </div>
            </div>
            <div class=""form-group row"">
                <label class=""col-md-3 col-form-label"">Email</label>
                <div class=""col-md-9"">
                    <input type=""text"" class=""form-control"" id=""Email"" />
                </div>
            </div>
            <div class=""form-group row"">
                <label class=""col-md-3 col-form");
            WriteLiteral(@"-label"">Şifreniz</label>
                <div class=""col-md-9"">
                    <input type=""text"" class=""form-control"" id=""Sifre"" />
                </div>
            </div>
            <button class=""btn btn-primary"" id=""btnSave"">Kullanıcı Kaydet</button>

        </div>
        <div class=""col-md-6"">
            <div id=""userDiv"" style=""display: none;"">
                <h2>Kullanıcı Listesi</h2>
                <table class=""table table-bordered table-sm"">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Email</th>
                        </tr>
                    </thead>
                    <tbody id=""userData""></tbody>

                </table>


            </div>
            <div id=""logindiv"">
                <h2>Kullanici Giris Formu</h2>
                <div class=""form-group row"">
           ");
            WriteLiteral(@"         <label class=""col-md-3 col-form-label"">Email</label>
                    <div class=""col-md-9"">
                        <input type=""text"" class=""form-control"" id=""txtEmail"" />
                    </div>
                </div>
                <div class=""form-group row"">
                    <label class=""col-md-3 col-form-label"">Parola</label>
                    <div class=""col-md-9"">
                        <input type=""text"" class=""form-control"" id=""txtParola"" />
                    </div>
                </div>
                <div align=""right""> <button class=""btn btn-primary"" id=""btnLogin"">Giriş Yap</button></div>
            </div>
        </div>

    </div>
</div>



");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(function () {

            $(""#btnSave"").on('click',
                () => {
                    let name = $(""#Name"").val();
                    let surname = $(""#Surname"").val();
                    let email = $(""#Email"").val();
                    let password = $(""#Sifre"").val();
                    let user = {
                        ""Name"": name,
                        ""Surname"": surname,
                        ""Email"": email,
                        ""Password"": password
                    }
                    var url = ""https://localhost:44398/api/User"";
                    $.ajax({
                        type: ""POST"",
                        crossDomain: true,
                        url: url,
                        data: JSON.stringify(user),
                        contentType: ""application/json"",
                        dataType: ""json"",
                        success: function (data) {
                            cons");
                WriteLiteral(@"ole.table(data);
                        },
                        error: function (error) {
                            console.error(error);
                        }
                    });
                });

            function getUserDataRefreshToken() {
                debugger;
                let refreshToken = localStorage.getItem(""refreshToken"");
                let url = ""https://localhost:44398/api/Login/RefreshToken"";
                var data = { 'RefreshToken': refreshToken };
                $.ajax({
                    type: 'POST',
                    url: url,
                    async: false,
                    crossDomain: true,
                    contentType: ""application/json"",
                    dataType: ""json"",
                    data: JSON.stringify(data),
                    success: function(data) {
                        console.log(data);
                        localStorage.setItem(""token"", data.token);
                        localStorage.setIte");
                WriteLiteral(@"m(""refreshToken"", data.refreshToken);
                        getUserData();
                    },
                    error: function (error) {}
                });
            }
            function getUserData() {
                let url = ""https://localhost:44398/api/User"";
                let accessToken = localStorage.getItem(""token"");
                $.ajax({
                    type: ""GET"",
                    url: url,
                    contentType: ""application/json"",
                    dataType: ""json"",
                    async: false,
                    crossDomain: true,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader(""Authorization"", `Bearer ${accessToken}`);
                    },
                    statusCode: {
                        401: function () {
                            getUserDataRefreshToken();
                        }
                    },
                    success: function (data) {
              ");
                WriteLiteral(@"          debugger;
                        console.table(data);
                        $(""#logindiv"").hide();
                        $(""#userDiv"").attr('style', ""display:block"");
                        $(""#userData"").append(`
                                   <tr>
                                   <td>${data.id}</td>
                                   <td>${data.name}</td>
                                   <td>${data.surname}</td>
                                   <td>${data.email}</td>
                                   </tr>
                                   `);
                    },
                    error: function (error) { }

                });

            }
            $(""#btnLogin"").on('click',
                () => {
                    let loginEmail = $(""#txtEmail"").val();
                    let loginPassword = $(""#txtParola"").val();

                    let userLogin = { 'Email': loginEmail, 'Password': loginPassword };

                    let urlLogin = ""h");
                WriteLiteral(@"ttps://localhost:44398/api/Login/AccessToken"";
                    $.ajax({
                        type: 'POST',
                        url: urlLogin,
                        crossDomain: true,
                        data: JSON.stringify(userLogin),
                        contentType: ""application/json"",
                        dataType: ""json"",
                        success: function (data) {
                            console.table(data);
                            localStorage.setItem(""token"", data.token);
                            localStorage.setItem(""refreshToken"", data.refreshToken);
                            getUserData();
                        },
                        error: function (error) {
                            console.error(error);
                        }
                    });
                });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
